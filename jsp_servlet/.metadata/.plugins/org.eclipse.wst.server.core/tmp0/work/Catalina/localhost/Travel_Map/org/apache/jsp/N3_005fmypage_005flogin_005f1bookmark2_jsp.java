/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2022-01-04 10:25:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.PHM_travel_mapDTO.PHM_travel_planDTO;
import com.PHM_travel_mapDTO.PHM_travel_mapDTO;
import java.util.ArrayList;

public final class N3_005fmypage_005flogin_005f1bookmark2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.PHM_travel_mapDTO.PHM_travel_planDTO");
    _jspx_imports_classes.add("com.PHM_travel_mapDTO.PHM_travel_mapDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"./assets/css/N4_mypage_login_1bookmark2.css\" />\r\n");
      out.write("	<title>N4_mypage_login_1bookmark1</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");

		int total = (int)session.getAttribute("total_date");
		ArrayList<PHM_travel_mapDTO> arr1 = (ArrayList<PHM_travel_mapDTO>)session.getAttribute("plan1");
		ArrayList<PHM_travel_planDTO> arr2 = (ArrayList<PHM_travel_planDTO>)session.getAttribute("plan2");
	
	
	
      out.write("\r\n");
      out.write("	<div id=\"side_bar\">\r\n");
      out.write("		<b>My Real Travel in GwangJu </b>\r\n");
      out.write("		<button onClick=\"location.href='tm_LogoutCon'\">로그아웃</button>\r\n");
      out.write("	</div> \r\n");
      out.write("	<div id=\"side_all\">\r\n");
      out.write("		<div id=\"side_one\">\r\n");
      out.write("			<nav>\r\n");
      out.write("                <ul class=\"side_menu\">\r\n");
      out.write("                    <!-- onClick=\"window.location.reload()\" -->\r\n");
      out.write("                    <li><button class = \"side_button\" onClick=\"location.href='N1_main.jsp'\"><a href=\"#\" >검색</a></button></li>\r\n");
      out.write("                    <li><button class = \"side_button\" onClick=\"location.href='N2_travelplan1.jsp'\"><a href=\"#\" >여행계획</a></button></li>\r\n");
      out.write("                    <li><button class = \"side_button\" onClick=\"location.href='N3_mypage_login_1bookmark1.jsp'\"><a href=\"#\" >My</a></button></li>\r\n");
      out.write("                    <li><button class = \"side_button\" onClick=\"location.href='N5_sns.jsp'\"><a href=\"#\" >SNS</a></button></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("			</nav>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"side_two\">\r\n");
      out.write("			<ul>\r\n");
      out.write("			\r\n");
      out.write("				<li><button class = \"side_button\" onClick=\"location.href='N3_mypage_login_1bookmark1.jsp'\">내 계획</button></li>\r\n");
      out.write("				<li><button class = \"side_button\" onClick=\"location.href='N3_mypage_login_2mynews.jsp'\">내소식</button></li>\r\n");
      out.write("				<li><button class = \"side_button\" onClick=\"location.href='N3_mypage_login_3myinfo.jsp'\">내정보</button></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"side_three\">\r\n");
      out.write("			");
 
			int a = 1;
			for(int i =0; i<total ;i++) {
      out.write("\r\n");
      out.write("				<table id=\"plan_table_one\">\r\n");
      out.write("					<caption>");
      out.print(i+1 );
      out.write("일차</caption>\r\n");
      out.write("					<colgroup>\r\n");
      out.write("						<col style=\"width: 10%;\">\r\n");
      out.write("						<col style=\"width: 40%;\">\r\n");
      out.write("						<col style=\"width: 25%;\">\r\n");
      out.write("						<col style=\"width: 25%;\">\r\n");
      out.write("					</colgroup>\r\n");
      out.write("					");
 
					for(int j =0; j<arr2.size() ; j++){ 
						if(Integer.valueOf(arr2.get(j).getDay())==(i+1)){
							
					
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>");
      out.print(arr2.get(j).getCnt() );
      out.write("</td>\r\n");
      out.write("							<td id='map_name");
      out.print(arr2.get(j).getDay() );
      out.write('_');
      out.print(arr2.get(j).getCnt() );
      out.write('\'');
      out.write('>');
      out.print(arr2.get(j).getMap_name() );
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(arr2.get(j).getStartTime() );
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(arr2.get(j).getEndTime() );
      out.write("</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>메모 : </td>\r\n");
      out.write("							");
if(arr2.get(j).getMemo()==null){ 
      out.write("\r\n");
      out.write("								<td colspan=\"3\">메모가 없습니다.</td>\r\n");
      out.write("							");
} else{
      out.write("\r\n");
      out.write("							<td colspan=\"3\">");
      out.print(arr2.get(j).getMemo() );
      out.write("</td>\r\n");
      out.write("							");
} 
      out.write("\r\n");
      out.write("						</tr>\r\n");
      out.write("						\r\n");
      out.write("					");

					}
      out.write("\r\n");
      out.write("						\r\n");
      out.write("					");
}
				 
      out.write("\r\n");
      out.write("						 <tr>\r\n");
      out.write("							<td colspan=\"4\" id=\"plan_table_last\" >\r\n");
      out.write("								<button onClick = \"kakao(");
      out.print(i+1);
      out.write(")\" >거리보기</button>\r\n");
      out.write("								<button onClick = \"tmap(");
      out.print(i+1);
      out.write(")\" >경로보기</button>\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"side_four\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li><button class=\"side_button\" onClick=\"location.href='N3_mypage_login_1bookmark1.jsp'\">뒤로가기</button></li>\r\n");
      out.write("				<li><button class=\"side_button\" onClick=\"location.href='N3_mypage_login_1bookmark3.jsp'\">다음으로</button></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"side_five\">\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("<!-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- -->    \r\n");
      out.write("	<div id=\"kakao_map\" style=\"width: 73.3%; height: 100vh; float: right;\"></div>\r\n");
      out.write("	<div id=\"tmap_map\" style=\"width: 73.3%; height: 100vh; float: right; \"></div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"./assets/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("		// 티맵용도\r\n");
      out.write("		var plan_list=[];\r\n");
      out.write("		var plan_list1=[];\r\n");
      out.write("		var plan_list2=[];\r\n");
      out.write("		var plan_list3=[];\r\n");
      out.write("		var plan_list4=[];\r\n");
      out.write("		var plan_list5=[];\r\n");
      out.write("		var plan_list6=[];\r\n");
      out.write("		//카카오 용도\r\n");
      out.write("		var positions1=[];\r\n");
      out.write("		var positions2=[];\r\n");
      out.write("		var positions3=[];\r\n");
      out.write("		var positions4=[];\r\n");
      out.write("		var positions5=[];\r\n");
      out.write("		var positions6=[];\r\n");
      out.write("		//데이터 전송용\r\n");
      out.write("		var map_name1='';\r\n");
      out.write("		var map_name2='';\r\n");
      out.write("		var map_name3='';\r\n");
      out.write("		var map_name4='';\r\n");
      out.write("		var map_name5='';\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		function kakao(day){\r\n");
      out.write("			if(day==1){\r\n");
      out.write("				map_name1 = $(\"#map_name1_1\").text();\r\n");
      out.write("				map_name2 = $(\"#map_name1_2\").text();\r\n");
      out.write("				map_name3 = $(\"#map_name1_3\").text();\r\n");
      out.write("				map_name4 = $(\"#map_name1_4\").text();\r\n");
      out.write("				map_name5 = $(\"#map_name1_5\").text();\r\n");
      out.write("			}else if(day==2){\r\n");
      out.write("				map_name1 = $(\"#map_name2_1\").text();\r\n");
      out.write("				map_name2 = $(\"#map_name2_2\").text();\r\n");
      out.write("				map_name3 = $(\"#map_name2_3\").text();\r\n");
      out.write("				map_name4 = $(\"#map_name2_4\").text();\r\n");
      out.write("				map_name5 = $(\"#map_name2_5\").text();\r\n");
      out.write("\r\n");
      out.write("			}else if(day==3){\r\n");
      out.write("				map_name1 = $(\"#map_name3_1\").text();\r\n");
      out.write("				map_name2 = $(\"#map_name3_2\").text();\r\n");
      out.write("				map_name3 = $(\"#map_name3_3\").text();\r\n");
      out.write("				map_name4 = $(\"#map_name3_4\").text();\r\n");
      out.write("				map_name5 = $(\"#map_name3_5\").text();\r\n");
      out.write("\r\n");
      out.write("			}else if(day==4){\r\n");
      out.write("				map_name1 = $(\"#map_name4_1\").text();\r\n");
      out.write("				map_name2 = $(\"#map_name4_2\").text();\r\n");
      out.write("				map_name3 = $(\"#map_name4_3\").text();\r\n");
      out.write("				map_name4 = $(\"#map_name4_4\").text();\r\n");
      out.write("				map_name5 = $(\"#map_name4_5\").text();\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"my_bookmarkMap\",	\r\n");
      out.write("				type : \"get\",\r\n");
      out.write("				data : {\r\n");
      out.write("					\"map_name1\" : map_name1,\r\n");
      out.write("					\"map_name2\" : map_name2,\r\n");
      out.write("					\"map_name3\" : map_name3,\r\n");
      out.write("					\"map_name4\" : map_name4,\r\n");
      out.write("					\"map_name5\" : map_name5\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"json\",\r\n");
      out.write("				success : function(res){ \r\n");
      out.write("					marker_allClose(markers);\r\n");
      out.write("					drawLine_allClose(drawLine_list);\r\n");
      out.write("					distanceOverlay_allClose(distanceOverlay_list);\r\n");
      out.write("					var positions=[];\r\n");
      out.write("					console.log(res);\r\n");
      out.write("					for(let i =0; i<res.length; i++){\r\n");
      out.write("						positions.push({title: res[i].map_name, \r\n");
      out.write("				        	latlng: new kakao.maps.LatLng(res[i].map_latitude, res[i].map_longtitude)});\r\n");
      out.write("					}\r\n");
      out.write("					console.log(positions);\r\n");
      out.write("					displayMarker(positions);\r\n");
      out.write("					kakao_route(positions);\r\n");
      out.write("				},\r\n");
      out.write("				error : function(){\r\n");
      out.write("					alert(\"요청 실패!\")\r\n");
      out.write("				}\r\n");
      out.write("			\r\n");
      out.write("			})\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function tmap(day){\r\n");
      out.write("			if(day==1){\r\n");
      out.write("				map_name1 = $(\"#map_name1_1\").text();\r\n");
      out.write("				map_name2 = $(\"#map_name1_2\").text();\r\n");
      out.write("				map_name3 = $(\"#map_name1_3\").text();\r\n");
      out.write("				map_name4 = $(\"#map_name1_4\").text();\r\n");
      out.write("				map_name5 = $(\"#map_name1_5\").text();\r\n");
      out.write("			}else if(day==2){\r\n");
      out.write("				map_name1 = $(\"#map_name2_1\").text();\r\n");
      out.write("				map_name2 = $(\"#map_name2_2\").text();\r\n");
      out.write("				map_name3 = $(\"#map_name2_3\").text();\r\n");
      out.write("				map_name4 = $(\"#map_name2_4\").text();\r\n");
      out.write("				map_name5 = $(\"#map_name2_5\").text();\r\n");
      out.write("\r\n");
      out.write("			}else if(day==3){\r\n");
      out.write("				map_name1 = $(\"#map_name3_1\").text();\r\n");
      out.write("				map_name2 = $(\"#map_name3_2\").text();\r\n");
      out.write("				map_name3 = $(\"#map_name3_3\").text();\r\n");
      out.write("				map_name4 = $(\"#map_name3_4\").text();\r\n");
      out.write("				map_name5 = $(\"#map_name3_5\").text();\r\n");
      out.write("\r\n");
      out.write("			}else if(day==4){\r\n");
      out.write("				map_name1 = $(\"#map_name4_1\").text();\r\n");
      out.write("				map_name2 = $(\"#map_name4_2\").text();\r\n");
      out.write("				map_name3 = $(\"#map_name4_3\").text();\r\n");
      out.write("				map_name4 = $(\"#map_name4_4\").text();\r\n");
      out.write("				map_name5 = $(\"#map_name4_5\").text();\r\n");
      out.write("			}\r\n");
      out.write("			console.log(\"map_name1\",map_name1);\r\n");
      out.write("			console.log(\"map_name2\",map_name2);\r\n");
      out.write("			console.log(\"map_name3\",map_name3);\r\n");
      out.write("			console.log(\"map_name4\",map_name4);\r\n");
      out.write("			console.log(\"map_name5\",map_name5);\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"my_bookmarkMap\",	\r\n");
      out.write("				type : \"get\",\r\n");
      out.write("				data : {\r\n");
      out.write("					\"map_name1\" : map_name1,\r\n");
      out.write("					\"map_name2\" : map_name2,\r\n");
      out.write("					\"map_name3\" : map_name3,\r\n");
      out.write("					\"map_name4\" : map_name4,\r\n");
      out.write("					\"map_name5\" : map_name5\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"json\",\r\n");
      out.write("				success : function(res){ \r\n");
      out.write("					console.log('ajax응답결과>> ',res);\r\n");
      out.write("					tmap_route(res);\r\n");
      out.write("				},\r\n");
      out.write("				error : function(){\r\n");
      out.write("					alert(\"요청 실패!\")\r\n");
      out.write("				}\r\n");
      out.write("			\r\n");
      out.write("			})			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=31e189d0d305a85663770a625b11688d&libraries=services\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		//카카오맵 지도 생성\r\n");
      out.write("		var mapContainer = document.getElementById('kakao_map'); // 지도를 표시할 div \r\n");
      out.write("		mapOption = {\r\n");
      out.write("			center : new kakao.maps.LatLng(35.11070531999631, 126.87780481325912), // 지도의 중심좌표 - 스마트인재개발원\r\n");
      out.write("			level : 3	// 지도의 확대 레벨\r\n");
      out.write("		};\r\n");
      out.write("		// 지도를 생성합니다    \r\n");
      out.write("		var map = new kakao.maps.Map(mapContainer, mapOption);\r\n");
      out.write("		\r\n");
      out.write("		var imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\"; \r\n");
      out.write("		var markers = [];\r\n");
      out.write("		\r\n");
      out.write("		function displayMarker(positions) {\r\n");
      out.write("			for (var i = 0; i < positions.length; i ++) {\r\n");
      out.write("			    \r\n");
      out.write("			    // 마커 이미지의 이미지 크기 입니다\r\n");
      out.write("			    var imageSize = new kakao.maps.Size(24, 35); \r\n");
      out.write("			    \r\n");
      out.write("			    // 마커 이미지를 생성합니다    \r\n");
      out.write("			    var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize); \r\n");
      out.write("			    \r\n");
      out.write("			    // 마커를 생성합니다\r\n");
      out.write("			    var marker = new kakao.maps.Marker({\r\n");
      out.write("			        map: map, // 마커를 표시할 지도\r\n");
      out.write("			        position: positions[i].latlng, // 마커를 표시할 위치\r\n");
      out.write("			        title : positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\r\n");
      out.write("			        image : markerImage, // 마커 이미지 \r\n");
      out.write("			        level:3\r\n");
      out.write("			    });\r\n");
      out.write("			    \r\n");
      out.write("			   markers.push(marker);\r\n");
      out.write("			    \r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		function marker_allClose(marker_del){\r\n");
      out.write("			for(let i =0; i<marker_del.length; i++){\r\n");
      out.write("				marker_del[i].setMap(null);\r\n");
      out.write("				console.log(i,marker_del[i])\r\n");
      out.write("			}\r\n");
      out.write("			markers=[];\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--카카오 -------------------------------------------------------------------------------------------------------------------------------------------------- -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("		// 지도 미리보기 파트(카카오맵) \r\n");
      out.write("		var drawLine_list = [];\r\n");
      out.write("		var distanceOverlay_list = [];\r\n");
      out.write("		function drawLine_allClose(drawLine_list){\r\n");
      out.write("			for(let i =0; i<drawLine_list.length; i++){\r\n");
      out.write("				drawLine_list[i].setMap(null);\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		function distanceOverlay_allClose(distanceOverlay_list){\r\n");
      out.write("			for(let i =0; i<distanceOverlay_list.length; i++){\r\n");
      out.write("				distanceOverlay_list[i].setMap(null);\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		function kakao_route(positions){\r\n");
      out.write("			document.getElementById('kakao_map').style.display=\"block\";\r\n");
      out.write("			document.getElementById('tmap_map').style.display=\"none\";\r\n");
      out.write("			var distanceOverlay;\r\n");
      out.write("			var linePath;\r\n");
      out.write("			var lineLine = new kakao.maps.Polyline();\r\n");
      out.write("			var distance;\r\n");
      out.write("			/*if(day==1){\r\n");
      out.write("				positions = positions1;\r\n");
      out.write("			}else if(day==2){\r\n");
      out.write("				positions = positions2;\r\n");
      out.write("			}else if(day==3){\r\n");
      out.write("				positions = positions3;\r\n");
      out.write("			}else if(day==4){\r\n");
      out.write("				positions = positions4;\r\n");
      out.write("			}else if(day==5){\r\n");
      out.write("				positions = positions5;\r\n");
      out.write("			}else if(day==6){\r\n");
      out.write("				positions = positions6;\r\n");
      out.write("			}*/\r\n");
      out.write("			\r\n");
      out.write("			for(var i = 0; i<positions.length; i++){\r\n");
      out.write("				if(i!=0){\r\n");
      out.write("					linePath = [positions[i-1].latlng, positions[i].latlng]\r\n");
      out.write("				}\r\n");
      out.write("				lineLine.setPath(linePath) // 선을 그릴 라인을 세팅합니다.\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				var drawLine = new kakao.maps.Polyline({\r\n");
      out.write("					map:map,\r\n");
      out.write("					path : linePath,\r\n");
      out.write("					strokeWeight : 3, 			// 선의 두께입니다\r\n");
      out.write("					strokeColor : '#db4040',	// 선의 색깔입니다\r\n");
      out.write("					strokeOpacity : 1, 			// 선의 불투명도입니다. 0에서 1사이값이며 0에 가까울수록 투명합니다.\r\n");
      out.write("					strokeStyle : 'solid'		// 선의 스타일입니다.\r\n");
      out.write("				})\r\n");
      out.write("				drawLine_list.push(drawLine);\r\n");
      out.write("				distance = Math.round(lineLine.getLength());\r\n");
      out.write("				displayCircleDot(positions[i].latlng, distance);\r\n");
      out.write("			}\r\n");
      out.write("			function displayCircleDot(position, distance){\r\n");
      out.write("				if(distance>0){\r\n");
      out.write("					//클릭한 지점까지의 그려진 선의 총 거리를 표시할 커스텀 오버레이를 생성합니다\r\n");
      out.write("					var distanceOverlay = new kakao.maps.CustomOverlay({\r\n");
      out.write("						content : '<div class=\"dotOverlay\">거리<span class=\"number\">'\r\n");
      out.write("								+ distance + '</span>m</div>',\r\n");
      out.write("						position : position,\r\n");
      out.write("						yAnchor : 1,\r\n");
      out.write("						zIndex : 2,\r\n");
      out.write("					\r\n");
      out.write("					})	;\r\n");
      out.write("					\r\n");
      out.write("					distanceOverlay.setMap(map);\r\n");
      out.write("					distanceOverlay_list.push(distanceOverlay);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			var moveLatLon = new kakao.maps.LatLng(35.1599801229349, 126.85227886055003)\r\n");
      out.write("			map.setLevel(7);\r\n");
      out.write("			map.setCenter(moveLatLon);\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 티맵---------------------------------------------------------------------------------------------------------------------------------------------- -->\r\n");
      out.write("<script src=\"https://apis.openapi.sk.com/tmap/jsv2?version=1&appKey=l7xxefc4aaf819ab46d09bfedeef6adff714\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		map1 = new Tmapv2.Map(\"tmap_map\", {\r\n");
      out.write("			center: new Tmapv2.LatLng(35.1599801229349, 126.85227886055003),\r\n");
      out.write("		});\r\n");
      out.write("		map1.setZoom(14);\r\n");
      out.write("	</script>\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("		var tmap_markers =[];\r\n");
      out.write("		var new_polyLine = [];\r\n");
      out.write("		// 지도 경로미리보기 파트(티맵)\r\n");
      out.write("		function tmap_route(plan_list){\r\n");
      out.write("			tmap_allClose();\r\n");
      out.write("			//tmap_poly_allClose(new_polyLine);\r\n");
      out.write("			tmap_poly_allClose();\r\n");
      out.write("			\r\n");
      out.write("			document.getElementById('kakao_map').style.display=\"none\";\r\n");
      out.write("			document.getElementById('tmap_map').style.display=\"block\";\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			var new_Click_polyLine = [];\r\n");
      out.write("			\r\n");
      out.write("			function drawData(data){\r\n");
      out.write("				\r\n");
      out.write("				// 지도위에 선은 다 지우기\r\n");
      out.write("				routeData = data;\r\n");
      out.write("				var resultStr = \"\";\r\n");
      out.write("				var distance = 0;\r\n");
      out.write("				var idx = 1;\r\n");
      out.write("				var newData = [];\r\n");
      out.write("				var equalData = [];\r\n");
      out.write("				var pointId1 = \"-1234567\";\r\n");
      out.write("				var ar_line = [];\r\n");
      out.write("				\r\n");
      out.write("				for (var i = 0; i < data.features.length; i++) {\r\n");
      out.write("					var feature = data.features[i];\r\n");
      out.write("					//배열에 경로 좌표 저잘\r\n");
      out.write("					if(feature.geometry.type == \"LineString\"){\r\n");
      out.write("						ar_line = [];\r\n");
      out.write("						for (var j = 0; j < feature.geometry.coordinates.length; j++) {\r\n");
      out.write("							var startPt = new Tmapv2.LatLng(feature.geometry.coordinates[j][1],feature.geometry.coordinates[j][0]);\r\n");
      out.write("							ar_line.push(startPt);\r\n");
      out.write("							pointArray.push(feature.geometry.coordinates[j]);\r\n");
      out.write("						}\r\n");
      out.write("						var polyline = new Tmapv2.Polyline({\r\n");
      out.write("					        path: ar_line,\r\n");
      out.write("					        strokeColor: \"#ff0000\", \r\n");
      out.write("					        strokeWeight: 6,\r\n");
      out.write("					        map: map1\r\n");
      out.write("					    });\r\n");
      out.write("						new_polyLine.push(polyline);\r\n");
      out.write("					}\r\n");
      out.write("					var pointId2 = feature.properties.viaPointId;\r\n");
      out.write("					if (pointId1 != pointId2) {\r\n");
      out.write("						equalData = [];\r\n");
      out.write("						equalData.push(feature);\r\n");
      out.write("						newData.push(equalData);\r\n");
      out.write("						pointId1 = pointId2;\r\n");
      out.write("					}\r\n");
      out.write("					else {\r\n");
      out.write("						equalData.push(feature);\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("				geoData = newData;\r\n");
      out.write("				var markerCnt = 1;\r\n");
      out.write("				for (var i = 0; i < newData.length; i++) {\r\n");
      out.write("					var mData = newData[i];\r\n");
      out.write("					var type = mData[0].geometry.type;\r\n");
      out.write("					var pointType = mData[0].properties.pointType;\r\n");
      out.write("					var pointTypeCheck = false; // 경유지 일때만 true\r\n");
      out.write("					if (mData[0].properties.pointType == \"S\") {\r\n");
      out.write("						var img = 'http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png';\r\n");
      out.write("						var lon = mData[0].geometry.coordinates[0];\r\n");
      out.write("						var lat = mData[0].geometry.coordinates[1];\r\n");
      out.write("					}\r\n");
      out.write("					else if (mData[0].properties.pointType == \"E\") {\r\n");
      out.write("						var img = 'http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png';\r\n");
      out.write("						var lon = mData[0].geometry.coordinates[0];\r\n");
      out.write("						var lat = mData[0].geometry.coordinates[1];\r\n");
      out.write("					}\r\n");
      out.write("					else {\r\n");
      out.write("						markerCnt=i;\r\n");
      out.write("						var lon = mData[0].geometry.coordinates[0];\r\n");
      out.write("						var lat = mData[0].geometry.coordinates[1];\r\n");
      out.write("					}	\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			// 2. 시작, 도착 심볼찍기\r\n");
      out.write("			\r\n");
      out.write("			var markerList = [];\r\n");
      out.write("			var pointArray = [];\r\n");
      out.write("			let plan_list_cnt = plan_list.length-1\r\n");
      out.write("			// 시작\r\n");
      out.write("			addMarker(\"llStart\",plan_list[0].map_longtitude, plan_list[0].map_latitude,1);\r\n");
      out.write("			// 도착 \r\n");
      out.write("			addMarker(\"llEnd\",plan_list[plan_list_cnt].map_longtitude, plan_list[plan_list_cnt].map_latitude,2);\r\n");
      out.write("			\r\n");
      out.write("			function addMarker(status, lon, lat, tag) {\r\n");
      out.write("				//출도착경유구분\r\n");
      out.write("				//이미지 파일 변경.\r\n");
      out.write("				var markerLayer;\r\n");
      out.write("				switch (status) {\r\n");
      out.write("					case \"llStart\":\r\n");
      out.write("						imgURL = 'http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png';\r\n");
      out.write("						break;\r\n");
      out.write("					case \"llPass\":\r\n");
      out.write("						imgURL = 'http://tmapapi.sktelecom.com/upload/tmap/marker/pin_b_m_p.png';\r\n");
      out.write("						break;\r\n");
      out.write("					case \"llEnd\":\r\n");
      out.write("						imgURL = 'http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png';\r\n");
      out.write("						break;\r\n");
      out.write("					default:\r\n");
      out.write("				};\r\n");
      out.write("				var marker = new Tmapv2.Marker({\r\n");
      out.write("					position: new Tmapv2.LatLng(lat,lon),\r\n");
      out.write("					icon: imgURL,\r\n");
      out.write("					map: map1\r\n");
      out.write("				});\r\n");
      out.write("				tmap_markers.push(marker);\r\n");
      out.write("				// 마커 드래그 설정\r\n");
      out.write("				marker.tag = tag;\r\n");
      out.write("				marker.addListener(\"dragend\", function (evt) {\r\n");
      out.write("				markerListenerEvent(evt);\r\n");
      out.write("			    });\r\n");
      out.write("			    marker.addListener(\"drag\", function (evt) {    	\r\n");
      out.write("			    	markerObject = markerList[tag];\r\n");
      out.write("			    });\r\n");
      out.write("			    markerList[tag] = marker;\r\n");
      out.write("				return marker;\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("			// 3. 경유지 심볼 찍기\r\n");
      out.write("			for(let i=1; i<plan_list.length-1; i++){\r\n");
      out.write("				addMarker(\"llPass\",plan_list[i].map_longtitude,plan_list[i].map_latitude,i+2);\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			// 4. 경로탐색 API 사용요청\r\n");
      out.write("			var startX = plan_list[0].map_longtitude;\r\n");
      out.write("			var startY = plan_list[0].map_latitude;\r\n");
      out.write("			var endX = plan_list[plan_list_cnt].map_longtitude;\r\n");
      out.write("			var endY = plan_list[plan_list_cnt].map_latitude;\r\n");
      out.write("			var passList = \"\";\r\n");
      out.write("			for(let i = 1; i<plan_list.length-1;i++){\r\n");
      out.write("				passList +=plan_list[i].map_longtitude+','+plan_list[i].map_latitude+'_';\r\n");
      out.write("			}\r\n");
      out.write("			var prtcl;\r\n");
      out.write("			var headers = {};\r\n");
      out.write("			headers[\"appKey\"]=\"l7xxefc4aaf819ab46d09bfedeef6adff714\";\r\n");
      out.write("			$.ajax({\r\n");
      out.write("					method:\"POST\", \r\n");
      out.write("					headers : headers, \r\n");
      out.write("					url:\"https://apis.openapi.sk.com/tmap/routes?version=1&format=json\",//\r\n");
      out.write("					async:false,\r\n");
      out.write("					data:{ \r\n");
      out.write("						startX : startX,\r\n");
      out.write("						startY : startY,\r\n");
      out.write("						endX : endX,\r\n");
      out.write("						endY : endY,\r\n");
      out.write("						passList : passList,\r\n");
      out.write("						reqCoordType : \"WGS84GEO\",\r\n");
      out.write("						resCoordType : \"WGS84GEO\",\r\n");
      out.write("						angle : \"172\",\r\n");
      out.write("						searchOption : \"0\",\r\n");
      out.write("						trafficInfo : \"Y\"\r\n");
      out.write("					},\r\n");
      out.write("					success:function(response){\r\n");
      out.write("						console.log(\"팍\",response)\r\n");
      out.write("					prtcl = response;\r\n");
      out.write("					\r\n");
      out.write("					// 5. 경로탐색 결과 Line 그리기 \r\n");
      out.write("					var trafficColors = {\r\n");
      out.write("						extractStyles:true,\r\n");
      out.write("						/* 실제 교통정보가 표출되면 아래와 같은 Color로 Line이 생성됩니다. */\r\n");
      out.write("						trafficDefaultColor:\"#636f63\", //Default\r\n");
      out.write("						trafficType1Color:\"#19b95f\", //원할\r\n");
      out.write("						trafficType2Color:\"#f15426\", //지체\r\n");
      out.write("						trafficType3Color:\"#ff970e\"  //정체		\r\n");
      out.write("					};    			\r\n");
      out.write("					var style_red = {\r\n");
      out.write("						fillColor:\"#FF0000\",\r\n");
      out.write("						fillOpacity:0.2,\r\n");
      out.write("						strokeColor: \"#FF0000\",\r\n");
      out.write("						strokeWidth: 3,\r\n");
      out.write("						strokeDashstyle: \"solid\",\r\n");
      out.write("						pointRadius: 2,\r\n");
      out.write("						title: \"this is a red line\"\r\n");
      out.write("					};\r\n");
      out.write("					drawData(prtcl);\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("					// 6. 경로탐색 결과 반경만큼 지도 레벨 조정\r\n");
      out.write("					var newData1 = geoData[0];\r\n");
      out.write("					console.log('newData1>>', newData1);\r\n");
      out.write("					PTbounds = new Tmapv2.LatLngBounds();\r\n");
      out.write("							for (var i = 0; i < newData1.length; i++) {\r\n");
      out.write("								var mData = newData1[i];\r\n");
      out.write("								var type = mData.geometry.type;\r\n");
      out.write("								var pointType = mData.properties.pointType;\r\n");
      out.write("								if(type == \"Point\"){\r\n");
      out.write("									var linePt = new Tmapv2.LatLng(mData.geometry.coordinates[1],mData.geometry.coordinates[0]);\r\n");
      out.write("									console.log(linePt);\r\n");
      out.write("									PTbounds.extend(linePt);\r\n");
      out.write("								}\r\n");
      out.write("								else{\r\n");
      out.write("									var startPt,endPt;\r\n");
      out.write("									for (var j = 0; j < mData.geometry.coordinates.length; j++) {\r\n");
      out.write("										var linePt = new Tmapv2.LatLng(mData.geometry.coordinates[j][1],mData.geometry.coordinates[j][0]);\r\n");
      out.write("										PTbounds.extend(linePt);\r\n");
      out.write("									}\r\n");
      out.write("							}\r\n");
      out.write("						}\r\n");
      out.write("						map1.fitBounds(PTbounds);\r\n");
      out.write("				\r\n");
      out.write("					} ,\r\n");
      out.write("					error:function(request,status,error){\r\n");
      out.write("					console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		function tmap_allClose(){\r\n");
      out.write("			for(let i =0; i<tmap_markers.length; i++){\r\n");
      out.write("				tmap_markers[i].setMap(null);\r\n");
      out.write("			}\r\n");
      out.write("			tmap_markers=[];\r\n");
      out.write("		}\r\n");
      out.write("		function tmap_poly_allClose(){\r\n");
      out.write("			console.log('tmap_poly_allClose>> ',new_polyLine);\r\n");
      out.write("			\r\n");
      out.write("			if(new_polyLine!=null){\r\n");
      out.write("				for(let i =0; i<new_polyLine.length; i++){\r\n");
      out.write("					console.log(new_polyLine[i]);\r\n");
      out.write("					new_polyLine[i].setMap(null);\r\n");
      out.write("				}\r\n");
      out.write("				new_polyLine=[];\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
