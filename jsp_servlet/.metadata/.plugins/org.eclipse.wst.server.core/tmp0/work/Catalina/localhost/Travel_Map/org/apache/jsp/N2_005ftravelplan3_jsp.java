/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2022-01-04 06:38:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.PHM_travel_mapDTO.PHM_travel_mapDTO;

public final class N2_005ftravelplan3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.PHM_travel_mapDTO.PHM_travel_mapDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./assets/css/N2_travelplan3.css\" />\r\n");
      out.write("    <title>travelplan3</title>\r\n");
      out.write("    \r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	.plan{\r\n");
      out.write("		width : 10%;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");

		PHM_travel_mapDTO travelplan2 = (PHM_travel_mapDTO)session.getAttribute("travelplan2");
		int start_date = Integer.parseInt(travelplan2.getStart_date().substring(8));
		int end_date = Integer.parseInt(travelplan2.getEnd_date().substring(8));
		int total_date = end_date - start_date + 1;
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div id=\"day_location\" style=\"display:none;\"></div>\r\n");
      out.write("	<div id=\"side_bar\">\r\n");
      out.write("		<b>My Real Travel in GwangJu </b>\r\n");
      out.write("		<button onClick=\"location.href='tm_LogoutCon'\">로그아웃</button>\r\n");
      out.write("	</div> \r\n");
      out.write("    <div id=\"side_all\">\r\n");
      out.write("        <div id=\"side_one\">\r\n");
      out.write("            <nav>\r\n");
      out.write("                <ul class=\"side_menu\">\r\n");
      out.write("                    <!-- onClick=\"window.location.reload()\" -->\r\n");
      out.write("                    <li><button type=\"button\" class = \"side_button\" onClick=\"location.href='N1_main.jsp'\"><a href=\"#\" >검색</a></button></li>\r\n");
      out.write("                    <li><button type=\"button\" class = \"side_button\" onClick=\"location.href='N2_travelplan1.jsp'\"><a href=\"#\" >여행계획</a></button></li>\r\n");
      out.write("                    <li><button type=\"button\" class = \"side_button\" onClick=\"location.href='N3_mypage_login_1bookmark1.jsp'\"><a href=\"#\" >My</a></button></li>\r\n");
      out.write("                    <li><button type=\"button\" class = \"side_button\" onClick=\"location.href='N5_sns.jsp'\"><a href=\"#\" >SNS</a></button></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"side_two\" style=\"height:10%;\">\r\n");
      out.write("        	\r\n");
      out.write("        	<input type=\"text\" id=\"search_keyword_query\" placeholder=\"검색어 입력\">\r\n");
      out.write("            <button type=\"button\" id=\"search_keyword_query_button\"><img src=\"./img/search.png\"></button>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"side_three\" style=\"height:25%;\">\r\n");
      out.write("			<table class=\"plan_table_one\" align=\"center\">\r\n");
      out.write("				<caption><h3>여행지 즐겨찾기 목록</h3></caption>\r\n");
      out.write("				<colgroup >\r\n");
      out.write("					<col style=\"width: 5%;\">\r\n");
      out.write("					<col style=\"width: 30%;\">\r\n");
      out.write("					<col style=\"width: 32.5%;\">\r\n");
      out.write("					<col style=\"width: 18.5%;\">\r\n");
      out.write("					<col style=\"width: 14%;\">\r\n");
      out.write("				</colgroup>\r\n");
      out.write("				<tbody id=\"after\"></tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("			\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"day_add\" align = \"center\" style=\"margin:10px;\">\r\n");
      out.write("        	");
for(int i=0; i<total_date; i++) {
      out.write("\r\n");
      out.write("			 	<button type=\"button\" class=\"side_button\" onClick=\"day_plan(");
      out.print(total_date );
      out.write(',');
      out.print(i+1);
      out.write(')');
      out.write('"');
      out.write('>');
      out.print(i+1);
      out.write("일차</button>\r\n");
      out.write("        	");
}
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        <form action=\"travelplan3Con_send_data\">\r\n");
      out.write("        <div id=\"side_four\" style=\"height:42%;\">\r\n");
      out.write("        ");
for(int j = 0; j<total_date; j++) { 
        	if(j==0){
      out.write("\r\n");
      out.write("			<table class=\"plan_table_one\" id=\"plan1\" style=\"display:inline;\">\r\n");
      out.write("				<colgroup>\r\n");
      out.write("					<col style=\"width: 40px;\">\r\n");
      out.write("					<col style=\"width: 150px;\">\r\n");
      out.write("					<col style=\"width: 62.5px;\">\r\n");
      out.write("					<col style=\"width: 62.5px;\">\r\n");
      out.write("					<col style=\"width: 100px;\">\r\n");
      out.write("					<col style=\"width: 40px;\">\r\n");
      out.write("				</colgroup>\r\n");
      out.write("				<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>순서</td>\r\n");
      out.write("					<td>여행지명</td>\r\n");
      out.write("					<td>도착시간</td>\r\n");
      out.write("					<td>출발시간</td>\r\n");
      out.write("					<td>메모</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody id=\"table_add_1\" >\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("			");
} else{
      out.write("\r\n");
      out.write("			<table class=\"plan_table_one\" id=\"plan");
      out.print(j+1 );
      out.write("\" style=\"display:none;\">\r\n");
      out.write("				<colgroup>\r\n");
      out.write("					<col style=\"width: 40px;\">\r\n");
      out.write("					<col style=\"width: 150px;\">\r\n");
      out.write("					<col style=\"width: 62.5px;\">\r\n");
      out.write("					<col style=\"width: 62.5px;\">\r\n");
      out.write("					<col style=\"width: 80px;\">\r\n");
      out.write("					<col style=\"width: 60px;\">\r\n");
      out.write("				</colgroup>\r\n");
      out.write("				<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>순서</td>\r\n");
      out.write("					<td>여행지명</td>\r\n");
      out.write("					<td>도착시간</td>\r\n");
      out.write("					<td>출발시간</td>\r\n");
      out.write("					<td>메모</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody id=\"table_add_");
      out.print(j+1 );
      out.write("\" >\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("				");
}
			}
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"side_five\" align=\"center\">\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"side_six\" align=\"center\" style=\"margin-top:20px;\">\r\n");
      out.write("				<button	type=\"button\" class=\"side_button\" onClick=\"kakao_route()\" style=\"width:110px; margin-right:10px;\">지도 미리보기</button>\r\n");
      out.write("				<button type=\"button\" class=\"side_button\" onClick=\"tmap_route()\" style=\"width:110px; margin-right:10px;\">경로 미리보기</button>\r\n");
      out.write("				<button type=\"submit\" class=\"side_button\" style=\"width:100px;\">계획 세우기</button>\r\n");
      out.write("		</div>\r\n");
      out.write("		</form>\r\n");
      out.write("   	</div>\r\n");
      out.write("	\r\n");
      out.write("<!-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- -->    \r\n");
      out.write("	<div id=\"kakao_map\" style=\"width: 73.3%; height: 100vh; float: right;\"></div>\r\n");
      out.write("	<div id=\"tmap_map\" style=\"width: 73.3%; height: 100vh; float: right; display:none;\"></div>\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"./assets/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		//여행지 즐겨찾기 목록 파트\r\n");
      out.write("		var day = 1;\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("				url : \"favorite_bringCon\",\r\n");
      out.write("				type : \"get\",\r\n");
      out.write("				data : {\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"json\",\r\n");
      out.write("				success : function(res1){ \r\n");
      out.write("					//console.log(res)\r\n");
      out.write("					\r\n");
      out.write("					let add_tag1 =\"\";\r\n");
      out.write("					for(let a = 0; a < res1.length ; a++){\r\n");
      out.write("						add_tag1 += \"<tr><td>\"+(a+1)+\"</td>\";\r\n");
      out.write("						add_tag1 += \"<td>\"+res1[a].map_name+\"</td>\";\r\n");
      out.write("						add_tag1 += \"<td>\"+res1[a].map_addr+\"</td>\";\r\n");
      out.write("						add_tag1 += \"<td><button type='button' onClick=\\\"add_plan(\\'\"+res1[a].map_name+\"\\')\\\">계획에 넣기</button></td>\";\r\n");
      out.write("						add_tag1 += \"<td><button type='button' onClick=\\\"favorite_remove(\\'\"+res1[a].map_name+\"\\')\\\">삭제하기</button></td></tr>\";\r\n");
      out.write("					}\r\n");
      out.write("					$('#after').append(add_tag1);\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error : function(){\r\n");
      out.write("					alert(\"요청 실패!\")\r\n");
      out.write("				}\r\n");
      out.write("			\r\n");
      out.write("			})\r\n");
      out.write("		function favorite_remove(map_name1){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"favorite_removeCon\",	\r\n");
      out.write("				type : \"get\",\r\n");
      out.write("				data : {\r\n");
      out.write("					\"map_name\" : map_name1\r\n");
      out.write("				},\r\n");
      out.write("				dataType:\"json\",\r\n");
      out.write("				success : function(res2){ \r\n");
      out.write("					\r\n");
      out.write("					//console.log(res)\r\n");
      out.write("					$('#after').html('');\r\n");
      out.write("					add_tag2 =\"\";\r\n");
      out.write("					for(let b = 0; b < res2.length ; b++){\r\n");
      out.write("						add_tag2 += \"<tr><td>\"+(b+1)+\"</td>\";\r\n");
      out.write("						add_tag2 += \"<td>\"+res2[b].map_name+\"</td>\";\r\n");
      out.write("						add_tag2 += \"<td>\"+res2[b].map_addr+\"</td>\";\r\n");
      out.write("						add_tag2 += \"<td><button type='button' onClick=\\\"add_plan(\\'\"+res2[b].map_name+\"\\')\\\">계획에 넣기</button></td>\";\r\n");
      out.write("						add_tag2 += \"<td><button type='button' onClick=\\\"favorite_remove(\\'\"+res2[b].map_name+\"\\')\\\">삭제하기</button></td></tr>\";\r\n");
      out.write("					}	\r\n");
      out.write("					$('#after').append(add_tag2);\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error : function(){\r\n");
      out.write("					alert(\"요청 실패!\")\r\n");
      out.write("				}\r\n");
      out.write("			\r\n");
      out.write("			})\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	<script>\r\n");
      out.write("		// 계획에 넣기 파트\r\n");
      out.write("		//var loc = $('#day_location').text();\r\n");
      out.write("		/*for(let i=0; i<location.length ; i++){\r\n");
      out.write("			let plan_list=[];\r\n");
      out.write("		}*/\r\n");
      out.write("		//var cnt=0;\r\n");
      out.write("		\r\n");
      out.write("		//let day_schedule=[];\r\n");
      out.write("		\r\n");
      out.write("		let plan_list_position=[];\r\n");
      out.write("		let latitude = \"\";\r\n");
      out.write("		let longtitude = \"\";\r\n");
      out.write("		\r\n");
      out.write("		var plan_list=[];\r\n");
      out.write("		var plan_list1=[];\r\n");
      out.write("		var plan_list2=[];\r\n");
      out.write("		var plan_list3=[];\r\n");
      out.write("		var plan_list4=[];\r\n");
      out.write("		var plan_list5=[];\r\n");
      out.write("		var plan_list6=[];\r\n");
      out.write("		// 카카오맵 관련\r\n");
      out.write("		var positions=[];\r\n");
      out.write("		var positions1=[];\r\n");
      out.write("		var positions2=[];\r\n");
      out.write("		var positions3=[];\r\n");
      out.write("		var positions4=[];\r\n");
      out.write("		var positions5=[];\r\n");
      out.write("		var positions6=[];\r\n");
      out.write("		\r\n");
      out.write("		function add_plan(map_name2){\r\n");
      out.write("			$.ajax({ \r\n");
      out.write("				url : \"add_Plan\",	\r\n");
      out.write("				type : \"get\",\r\n");
      out.write("				data : {\r\n");
      out.write("					\"map_name\":map_name2\r\n");
      out.write("				},\r\n");
      out.write("				dataType : \"json\",\r\n");
      out.write("				success : function(res3){ \r\n");
      out.write("					//console.log(\"res :\",res);\r\n");
      out.write("					if(day==1){\r\n");
      out.write("						plan_list1.push(res3);\r\n");
      out.write("						positions1.push({title: res3.map_name, \r\n");
      out.write("					        latlng: new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude)});\r\n");
      out.write("						latitude = res3.map_latitude;\r\n");
      out.write("						longtitude = res3.map_longtitude;\r\n");
      out.write("						print_plan(plan_list1);\r\n");
      out.write("						panTo();\r\n");
      out.write("						//displayMarker(positions1,day);\r\n");
      out.write("						displayMarker(res3.map_name, new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude), day);\r\n");
      out.write("					}else if(day==2){\r\n");
      out.write("						plan_list2.push(res3);\r\n");
      out.write("						positions2.push({title: res3.map_name, \r\n");
      out.write("					        latlng: new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude)});\r\n");
      out.write("						latitude = res3.map_latitude;\r\n");
      out.write("						longtitude = res3.map_longtitude;\r\n");
      out.write("						print_plan(plan_list2);\r\n");
      out.write("						panTo();\r\n");
      out.write("						//displayMarker(positions2,day);\r\n");
      out.write("						displayMarker(res3.map_name, new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude), day);\r\n");
      out.write("					}else if(day==3){\r\n");
      out.write("						plan_list3.push(res3);\r\n");
      out.write("						positions3.push({title: res3.map_name, \r\n");
      out.write("					        latlng: new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude)});\r\n");
      out.write("						latitude = res3.map_latitude;\r\n");
      out.write("						longtitude = res3.map_longtitude;\r\n");
      out.write("						print_plan(plan_list3);\r\n");
      out.write("						panTo();\r\n");
      out.write("						//displayMarker(positions3,day);\r\n");
      out.write("						displayMarker(res3.map_name, new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude), day);\r\n");
      out.write("					}else if(day==4){\r\n");
      out.write("						plan_list4.push(res3);\r\n");
      out.write("						positions4.push({title: res3.map_name, \r\n");
      out.write("					        latlng: new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude)});\r\n");
      out.write("						latitude = res3.map_latitude;\r\n");
      out.write("						longtitude = res3.map_longtitude;\r\n");
      out.write("						print_plan(plan_list4);\r\n");
      out.write("						panTo();\r\n");
      out.write("						//displayMarker(positions4,day);\r\n");
      out.write("						displayMarker(res3.map_name, new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude), day);\r\n");
      out.write("					}else if(day==5){\r\n");
      out.write("						plan_list5.push(res3);\r\n");
      out.write("						positions5.push({title: res3.map_name, \r\n");
      out.write("					        latlng: new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude)});\r\n");
      out.write("						latitude = res3.map_latitude;\r\n");
      out.write("						longtitude = res3.map_longtitude;\r\n");
      out.write("						print_plan(plan_list5);\r\n");
      out.write("						panTo();\r\n");
      out.write("						//displayMarker(positions5,day);\r\n");
      out.write("						displayMarker(res3.map_name, new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude), day);\r\n");
      out.write("					}else if(day==6){\r\n");
      out.write("						plan_list6.push(res3);\r\n");
      out.write("						positions6.push({title: res3.map_name, \r\n");
      out.write("					        latlng: new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude)});\r\n");
      out.write("						latitude = res3.map_latitude;\r\n");
      out.write("						longtitude = res3.map_longtitude;\r\n");
      out.write("						print_plan(plan_list6);\r\n");
      out.write("						panTo();\r\n");
      out.write("						//displayMarker(positions6,day);\r\n");
      out.write("						displayMarker(res3.map_name, new kakao.maps.LatLng(res3.map_latitude, res3.map_longtitude), day);\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					/*positions.push({title: res.map_name, \r\n");
      out.write("				        latlng: new kakao.maps.LatLng(res.map_latitude, res.map_longtitude)});\r\n");
      out.write("					\r\n");
      out.write("					latitude = res.map_latitude;\r\n");
      out.write("					longtitude = res.map_longtitude;\r\n");
      out.write("					//console.log(\"latitude: \",latitude);\r\n");
      out.write("					//console.log(\"longtitude: \",longtitude);\r\n");
      out.write("				    //console.log(positions);\r\n");
      out.write("					//console.log(plan_list);\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					panTo();\r\n");
      out.write("					displayMarker(positions);*/\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error : function(){\r\n");
      out.write("					alert(\"요청 실패!\")\r\n");
      out.write("				}\r\n");
      out.write("			\r\n");
      out.write("			})\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function print_plan(plan_list_a){\r\n");
      out.write("			$('#table_add_'+day+'').html('');\r\n");
      out.write("			let add_tag3 = \"\";\r\n");
      out.write("			for(let c = 0; c<plan_list_a.length ; c++){\r\n");
      out.write("					\r\n");
      out.write("					add_tag3+=\"<tr><td>\"+(c+1)+\"</td>\";\r\n");
      out.write("					add_tag3+=\"<td>\"+plan_list_a[c].map_name+\"</td>\";\r\n");
      out.write("					add_tag3+=\"<td><input name='\"+day+\"_\"+(c+1)+\"_startTime' type='time'></td>\";\r\n");
      out.write("					add_tag3+=\"<td class='plan'><input name='\"+day+\"_\"+(c+1)+\"_endTime' type='time'></td>\";\r\n");
      out.write("					add_tag3+=\"<td class='memodo\"+(c+1)+\" plan'><button type='button' onClick='memo2(\"+(c+1)+\")' style='font-size:12px;'>메모하기</button></td>\";\r\n");
      out.write("					add_tag3+=\"<td class='plan'><button type='button' onClick='remove_plan(\\\"\"+plan_list_a[c].map_name+\"\\\",\"+day+\")'>삭제</button></td></tr>\";\r\n");
      out.write("					add_tag3+=\"<tr align='right'>\";\r\n");
      out.write("					add_tag3+=\"<td colspan='6' class='textarea\"+(c+1)+\"'><textarea name='\"+day+\"_\"+(c+1)+\"_memo' class='text\"+(c+1)+\"' style='display:none; width:400px;'></textarea></td></tr>\";\r\n");
      out.write("					\r\n");
      out.write("					add_tag3+=\"<tr><td colspan='6' style='display:none;'><input name='\"+day+\"_\"+(c+1)+\"_day' type='text' value='\"+day+\"'	style='display:noen;'>\";\r\n");
      out.write("					add_tag3+=\"<input name='\"+day+\"_\"+(c+1)+\"_cnt' type='text' value='\"+(c+1)+\"' style='display:noen;'>\";\r\n");
      out.write("					add_tag3+=\"<input name='\"+day+\"_\"+(c+1)+\"_map_name' type='text' value='\"+plan_list_a[c].map_name+\"' style='display:noen;'></td></tr>\";\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			}\r\n");
      out.write("			$('#table_add_'+day+'').append(add_tag3);\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	 	\r\n");
      out.write("		// 일차별로 계획 만들기 파트\r\n");
      out.write("		function day_plan(total_length_a, d){\r\n");
      out.write("			\r\n");
      out.write("			for(let e=1; e<total_length_a +1 ; e++){\r\n");
      out.write("				if(e==d){\r\n");
      out.write("					$('#plan'+d+'').css('display','inline');\r\n");
      out.write("				}else{\r\n");
      out.write("					$('#plan'+e+'').css('display','none');\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			day=d;\r\n");
      out.write("			if(d==1){\r\n");
      out.write("				displayMarker2(positions1,d);\r\n");
      out.write("				marker_allClose(markers2,2);\r\n");
      out.write("				marker_allClose(markers3,3);\r\n");
      out.write("				marker_allClose(markers4,4);\r\n");
      out.write("				marker_allClose(markers5,5);\r\n");
      out.write("				marker_allClose(markers6,6);\r\n");
      out.write("				drawLine_allClose(drawLine_list);\r\n");
      out.write("				distanceOverlay_allClose(distanceOverlay_list);\r\n");
      out.write("				tmap_allClose();\r\n");
      out.write("				tmap_poly_allClose();\r\n");
      out.write("			}else if(d==2){\r\n");
      out.write("				displayMarker2(positions2,d);\r\n");
      out.write("				marker_allClose(markers1,1);\r\n");
      out.write("				marker_allClose(markers3,3);\r\n");
      out.write("				marker_allClose(markers4,4);\r\n");
      out.write("				marker_allClose(markers5,5);\r\n");
      out.write("				marker_allClose(markers6,6);\r\n");
      out.write("				drawLine_allClose(drawLine_list);\r\n");
      out.write("				distanceOverlay_allClose(distanceOverlay_list)\r\n");
      out.write("				tmap_allClose();\r\n");
      out.write("				tmap_poly_allClose();\r\n");
      out.write("				\r\n");
      out.write("			}else if(d==3){\r\n");
      out.write("				displayMarker2(positions3,d);\r\n");
      out.write("				marker_allClose(markers1,1);\r\n");
      out.write("				marker_allClose(markers2,2);\r\n");
      out.write("				marker_allClose(markers4,4);\r\n");
      out.write("				marker_allClose(markers5,5);\r\n");
      out.write("				marker_allClose(markers6,6);\r\n");
      out.write("				drawLine_allClose(drawLine_list);\r\n");
      out.write("				distanceOverlay_allClose(distanceOverlay_list);\r\n");
      out.write("				tmap_allClose();\r\n");
      out.write("				tmap_poly_allClose();\r\n");
      out.write("			}else if(d==4){\r\n");
      out.write("				displayMarker2(positions4,d);\r\n");
      out.write("				marker_allClose(markers1,1);\r\n");
      out.write("				marker_allClose(markers2,2);\r\n");
      out.write("				marker_allClose(markers3,3);\r\n");
      out.write("				marker_allClose(markers5,5);\r\n");
      out.write("				marker_allClose(markers6,6);\r\n");
      out.write("				drawLine_allClose(drawLine_list);\r\n");
      out.write("				distanceOverlay_allClose(distanceOverlay_list);\r\n");
      out.write("				tmap_allClose();\r\n");
      out.write("				tmap_poly_allClose();\r\n");
      out.write("			}else if(d==5){\r\n");
      out.write("				displayMarker2(positions5,d);\r\n");
      out.write("				marker_allClose(markers1,1);\r\n");
      out.write("				marker_allClose(markers2,2);\r\n");
      out.write("				marker_allClose(markers3,3);\r\n");
      out.write("				marker_allClose(markers4,4);\r\n");
      out.write("				marker_allClose(markers6,6);\r\n");
      out.write("				drawLine_allClose(drawLine_list);\r\n");
      out.write("				distanceOverlay_allClose(distanceOverlay_list);\r\n");
      out.write("				tmap_allClose();\r\n");
      out.write("				tmap_poly_allClose();\r\n");
      out.write("			}else if(d==6){\r\n");
      out.write("				displayMarker2(positions6,d);\r\n");
      out.write("				marker_allClose(markers1,1);\r\n");
      out.write("				marker_allClose(markers2,2);\r\n");
      out.write("				marker_allClose(markers3,3);\r\n");
      out.write("				marker_allClose(markers4,4);\r\n");
      out.write("				marker_allClose(markers5,5);\r\n");
      out.write("				drawLine_allClose(drawLine_list);\r\n");
      out.write("				distanceOverlay_allClose(distanceOverlay_list);\r\n");
      out.write("				tmap_allClose();\r\n");
      out.write("				tmap_poly_allClose();\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("	<script type=\"text/javascript\">	\r\n");
      out.write("		//메모기능 파트\r\n");
      out.write("		function close_memo(g){\r\n");
      out.write("			$('.text'+g+'').hide();\r\n");
      out.write("			$('.memodo'+g+'').html(\"<button type='button' onClick='memo2(\"+g+\")' style='font-size:12px;'>메모하기</button>\")\r\n");
      out.write("		}\r\n");
      out.write("		function memo2(h){\r\n");
      out.write("			$('.text'+h+'').show();\r\n");
      out.write("			$('.memodo'+h+'').html(\"<button type='button' onClick='close_memo(\"+h+\")' style='font-size:12px;'>메모닫기</button>\")\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		function remove_plan(map_name2,k){\r\n");
      out.write("			console.log(1)\r\n");
      out.write("			if(k==1){\r\n");
      out.write("				for(let i = 0; i < plan_list1.length; i++) {\r\n");
      out.write("				  if(plan_list1[i].map_name === map_name2)  {\r\n");
      out.write("					    plan_list1.splice(i, 1);\r\n");
      out.write("				  }\r\n");
      out.write("				}\r\n");
      out.write("				for(let i = 0; i < positions1.length; i++) 	{\r\n");
      out.write("					  if(positions1[i].title === map_name2){\r\n");
      out.write("						  	marker_close(i,markers1);\r\n");
      out.write("						   	positions1.splice(i, 1);\r\n");
      out.write("						   	\r\n");
      out.write("					  }\r\n");
      out.write("					}\r\n");
      out.write("				//remove_plan2(plan_list1);\r\n");
      out.write("				print_plan(plan_list1);\r\n");
      out.write("			}\r\n");
      out.write("			else if(k==2){\r\n");
      out.write("				for(let i = 0; i < plan_list2.length; i++) {\r\n");
      out.write("				  if(plan_list2[i].map_name === map_name2)  {\r\n");
      out.write("					    plan_list2.splice(i, 1);\r\n");
      out.write("				  }\r\n");
      out.write("				  for(let i = 0; i < positions2.length; i++) 	{\r\n");
      out.write("					  if(positions2[i].title === map_name2){\r\n");
      out.write("						  	marker_close(i,markers2);\r\n");
      out.write("						   	positions2.splice(i, 1);\r\n");
      out.write("					  }\r\n");
      out.write("					}\r\n");
      out.write("				  //remove_plan2(plan_list2);\r\n");
      out.write("				  print_plan(plan_list2);\r\n");
      out.write("				}\r\n");
      out.write("			}else if(k==3){\r\n");
      out.write("				for(let i = 0; i < plan_list3.length; i++) {\r\n");
      out.write("					if(plan_list3[i].map_name === map_name2)  {\r\n");
      out.write("						    plan_list3.splice(i, 1);\r\n");
      out.write("					  }\r\n");
      out.write("					}\r\n");
      out.write("				for(let i = 0; i < positions3.length; i++) 	{\r\n");
      out.write("					  if(positions3[i].title === map_name2){\r\n");
      out.write("							marker_close(i,markers3);\r\n");
      out.write("						   	positions3.splice(i, 1);\r\n");
      out.write("					  }\r\n");
      out.write("					}\r\n");
      out.write("				  //remove_plan2(plan_list3);\r\n");
      out.write("					print_plan(plan_list3);\r\n");
      out.write("				}\r\n");
      out.write("			else if(k==4){\r\n");
      out.write("				for(let i = 0; i < plan_list4.length; i++) {\r\n");
      out.write("					  if(plan_list4[i].map_name === map_name2)  {\r\n");
      out.write("						    plan_list4.splice(i, 1);\r\n");
      out.write("					  }\r\n");
      out.write("					}\r\n");
      out.write("				for(let i = 0; i < positions4.length; i++) 	{\r\n");
      out.write("					  if(positions4[i].title === map_name2){\r\n");
      out.write("							marker_close(i,markers4);\r\n");
      out.write("						   	positions4.splice(i, 1);\r\n");
      out.write("					  }\r\n");
      out.write("					}\r\n");
      out.write("				//remove_plan2(plan_list4);\r\n");
      out.write("				print_plan(plan_list4);\r\n");
      out.write("				}\r\n");
      out.write("			else if(k==5){\r\n");
      out.write("				for(let i = 0; i < plan_list5.length; i++) {\r\n");
      out.write("					  if(plan_list5[i].map_name === map_name2)  {\r\n");
      out.write("						    plan_list5.splice(i, 1);\r\n");
      out.write("					  }\r\n");
      out.write("					}\r\n");
      out.write("				for(let i = 0; i < positions5.length; i++) 	{\r\n");
      out.write("					  if(positions5[i].title === map_name2){\r\n");
      out.write("							marker_close(i,markers5);\r\n");
      out.write("						   	positions5.splice(i, 1);\r\n");
      out.write("					  }\r\n");
      out.write("					}\r\n");
      out.write("				//remove_plan2(plan_list5);\r\n");
      out.write("				print_plan(plan_list5);\r\n");
      out.write("				}\r\n");
      out.write("			else if(k==6){\r\n");
      out.write("				for(let i = 0; i < plan_list6.length; i++) {\r\n");
      out.write("					  if(plan_list6[i].map_name === map_name2)  {\r\n");
      out.write("						    plan_list6.splice(i, 1);\r\n");
      out.write("					  }\r\n");
      out.write("					}\r\n");
      out.write("				for(let i = 0; i < positions6.length; i++) 	{\r\n");
      out.write("					  if(positions6[i].title === map_name2){\r\n");
      out.write("							marker_close(i,markers6);\r\n");
      out.write("						   	positions6.splice(i, 1);\r\n");
      out.write("					  }\r\n");
      out.write("					}\r\n");
      out.write("				//remove_plan2(plan_list6);\r\n");
      out.write("				print_plan(plan_list6);\r\n");
      out.write("				}\r\n");
      out.write("			/*for(let i = 0; i < positions.length; i++) 	{\r\n");
      out.write("			  if(positions[i].map_name === map_name){\r\n");
      out.write("				   	posiotions.splice(i, 1);\r\n");
      out.write("			  }\r\n");
      out.write("			}*/\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/*function remove_plan2(plan_list){\r\n");
      out.write("			$('#table_add_'+day+'').html('');\r\n");
      out.write("			let add_tag2 = \"\";\r\n");
      out.write("			for(let i = 0; i<plan_list.length ; i++){\r\n");
      out.write("				add_tag2+=\"<tr><td>\"+(i+1)+\"</td>\";\r\n");
      out.write("				add_tag2+=\"<td>\"+plan_list[i].map_name+\"</td>\";\r\n");
      out.write("				add_tag2+=\"<td><input type='time'></td>\";\r\n");
      out.write("				add_tag2+=\"<td><input type='time'></td>\";\r\n");
      out.write("				add_tag2+=\"<td class='memodo\"+(i+1)+\"'><button type='button' onClick='memo(\"+(i+1)+\")' style='font-size:12px; >메모하기</button></td>\";\r\n");
      out.write("				add_tag2+=\"<td><button type='button' onClick='remove_plan('\"+plan_list[i].map_name+\"' ,\"+day+\")'>삭제</button></td></tr>\";\r\n");
      out.write("				add_tag2+=\"<tr align='right'>\";\r\n");
      out.write("				add_tag2+=\"<td colspan='6' class='textarea\"+(i+1)+\"'><textarea class='text\"+(i+1)+\"' style='display:none; width:400px;'></textarea></td></tr>\";\r\n");
      out.write("			}\r\n");
      out.write("			$('#table_add_'+day+'').append(add_tag2)\r\n");
      out.write("		}*/\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=31e189d0d305a85663770a625b11688d&libraries=services\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	\r\n");
      out.write("		var mapContainer = document.getElementById('kakao_map'); // 지도를 표시할 div \r\n");
      out.write("		mapOption = {\r\n");
      out.write("			center : new kakao.maps.LatLng(35.11070531999631,\r\n");
      out.write("					126.87780481325912), // 지도의 중심좌표 - 스마트인재개발원\r\n");
      out.write("			level : 3,	// 지도의 확대 레벨\r\n");
      out.write("		};\r\n");
      out.write("		// 지도를 생성합니다    \r\n");
      out.write("		var map = new kakao.maps.Map(mapContainer, mapOption);\r\n");
      out.write("		\r\n");
      out.write("		function panTo() {\r\n");
      out.write("			// 이동할 위도 경도 위치를 생성합니다 \r\n");
      out.write("			var moveLatLon = new kakao.maps.LatLng(latitude, longtitude);\r\n");
      out.write("\r\n");
      out.write("			// 지도 중심을 부드럽게 이동시킵니다\r\n");
      out.write("			// 만약 이동할 거리가 지도 화면보다 크면 부드러운 효과 없이 이동합니다\r\n");
      out.write("			map.panTo(moveLatLon);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 마커 이미지의 이미지 주소입니다\r\n");
      out.write("		var imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\"; \r\n");
      out.write("		var markers = [];\r\n");
      out.write("		var markers1 = [];\r\n");
      out.write("		var markers2 = [];\r\n");
      out.write("		var markers3 = [];\r\n");
      out.write("		var markers4 = [];\r\n");
      out.write("		var markers5 = [];\r\n");
      out.write("		var markers6 = [];\r\n");
      out.write("		\r\n");
      out.write("		function displayMarker(title, positions, day) {\r\n");
      out.write("			//for (var i = 0; i < positions.length; i ++) {\r\n");
      out.write("			    \r\n");
      out.write("			    // 마커 이미지의 이미지 크기 입니다\r\n");
      out.write("			    var imageSize = new kakao.maps.Size(24, 35); \r\n");
      out.write("			    \r\n");
      out.write("			    // 마커 이미지를 생성합니다    \r\n");
      out.write("			    var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize); \r\n");
      out.write("			    \r\n");
      out.write("			    // 마커를 생성합니다\r\n");
      out.write("			    var marker = new kakao.maps.Marker({\r\n");
      out.write("			        map: map, // 마커를 표시할 지도\r\n");
      out.write("			        position: positions, // 마커를 표시할 위치\r\n");
      out.write("			        title : title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\r\n");
      out.write("			        image : markerImage, // 마커 이미지 \r\n");
      out.write("			        level:3\r\n");
      out.write("			    });\r\n");
      out.write("			   \r\n");
      out.write("			    \r\n");
      out.write("			//}\r\n");
      out.write("			 if(day==1){\r\n");
      out.write("			    	markers1.push(marker);\r\n");
      out.write("			    }else if(day==2){\r\n");
      out.write("			    	markers2.push(marker);\r\n");
      out.write("			    }else if(day==3){\r\n");
      out.write("			    	markers3.push(marker);\r\n");
      out.write("			    }else if(day==4){\r\n");
      out.write("			    	markers4.push(marker);\r\n");
      out.write("			    }else if(day==5){\r\n");
      out.write("			    	markers5.push(marker);\r\n");
      out.write("			    }else if(day==6){\r\n");
      out.write("			    	markers6.push(marker);\r\n");
      out.write("			    }\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		function displayMarker2(positions,day) {\r\n");
      out.write("			for (var i = 0; i < positions.length; i ++) {\r\n");
      out.write("			    \r\n");
      out.write("			    // 마커 이미지의 이미지 크기 입니다\r\n");
      out.write("			    var imageSize = new kakao.maps.Size(24, 35); \r\n");
      out.write("			    \r\n");
      out.write("			    // 마커 이미지를 생성합니다    \r\n");
      out.write("			    var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize); \r\n");
      out.write("			    \r\n");
      out.write("			    // 마커를 생성합니다\r\n");
      out.write("			    var marker = new kakao.maps.Marker({\r\n");
      out.write("			        map: map, // 마커를 표시할 지도\r\n");
      out.write("			        position: positions[i].latlng, // 마커를 표시할 위치\r\n");
      out.write("			        title : positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\r\n");
      out.write("			        image : markerImage, // 마커 이미지 \r\n");
      out.write("			        level:3\r\n");
      out.write("			    });\r\n");
      out.write("			   \r\n");
      out.write("			    if(day==1){\r\n");
      out.write("			    	markers1.push(marker);\r\n");
      out.write("			    }else if(day==2){\r\n");
      out.write("			    	markers2.push(marker);\r\n");
      out.write("			    }else if(day==3){\r\n");
      out.write("			    	markers3.push(marker);\r\n");
      out.write("			    }else if(day==4){\r\n");
      out.write("			    	markers4.push(marker);\r\n");
      out.write("			    }else if(day==5){\r\n");
      out.write("			    	markers5.push(marker);\r\n");
      out.write("			    }else if(day==6){\r\n");
      out.write("			    	markers6.push(marker);\r\n");
      out.write("			    }\r\n");
      out.write("			    \r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		function marker_allClose(marker_del,del){\r\n");
      out.write("			//console.log(markers)\r\n");
      out.write("			//console.log(\"포지션 길이 : \",positions.length)\r\n");
      out.write("			//console.log(\"포지션 : \",positions)\r\n");
      out.write("			\r\n");
      out.write("			for(let i =0; i<marker_del.length; i++){\r\n");
      out.write("				marker_del[i].setMap(null);\r\n");
      out.write("				console.log(i,marker_del[i]);\r\n");
      out.write("			}\r\n");
      out.write("			console.log(\"마커 : \",marker_del)\r\n");
      out.write("			if(del==1){\r\n");
      out.write("		    	markers1=[];\r\n");
      out.write("		    }else if(del==2){\r\n");
      out.write("		    	markers2=[];\r\n");
      out.write("		    }else if(del==3){\r\n");
      out.write("		    	markers3=[];\r\n");
      out.write("		    }else if(del==4){\r\n");
      out.write("		    	markers4=[];\r\n");
      out.write("		    }else if(del==5){\r\n");
      out.write("		    	markers5=[];\r\n");
      out.write("		    }else if(del==6){\r\n");
      out.write("		    	markers6=[];\r\n");
      out.write("		    }\r\n");
      out.write("						\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		function marker_close(del2,marker_del2){\r\n");
      out.write("			//console.log(\"i\",i)\r\n");
      out.write("			//console.log(\"markers1\",markers);\r\n");
      out.write("			marker_del2[del2].setMap(null);\r\n");
      out.write("			\r\n");
      out.write("			marker_del2.splice(del2, 1);\r\n");
      out.write("			//console.log(\"markers2\",markers);\r\n");
      out.write("			console.log(\"positions1\",positions1)\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		// 지도 미리보기 파트(카카오맵) \r\n");
      out.write("		var drawLine_list = [];\r\n");
      out.write("		var distanceOverlay_list = [];\r\n");
      out.write("		function kakao_route(){\r\n");
      out.write("			drawLine_allClose(drawLine_list);\r\n");
      out.write("			document.getElementById('kakao_map').style.display=\"block\";\r\n");
      out.write("			document.getElementById('tmap_map').style.display=\"none\";\r\n");
      out.write("			var distanceOverlay;\r\n");
      out.write("			var linePath;\r\n");
      out.write("			var lineLine = new kakao.maps.Polyline();\r\n");
      out.write("			var distance;\r\n");
      out.write("			if(day==1){\r\n");
      out.write("				positions = positions1;\r\n");
      out.write("			}else if(day==2){\r\n");
      out.write("				positions = positions2;\r\n");
      out.write("			}else if(day==3){\r\n");
      out.write("				positions = positions3;\r\n");
      out.write("			}else if(day==4){\r\n");
      out.write("				positions = positions4;\r\n");
      out.write("			}else if(day==5){\r\n");
      out.write("				positions = positions5;\r\n");
      out.write("			}else if(day==6){\r\n");
      out.write("				positions = positions6;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			for(var i = 0; i<positions.length; i++){\r\n");
      out.write("				if(i!=0){\r\n");
      out.write("					linePath = [positions[i-1].latlng, positions[i].latlng]\r\n");
      out.write("				}\r\n");
      out.write("				lineLine.setPath(linePath) // 선을 그릴 라인을 세팅합니다.\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				var drawLine = new kakao.maps.Polyline({\r\n");
      out.write("					map:map,\r\n");
      out.write("					path : linePath,\r\n");
      out.write("					strokeWeight : 3, 			// 선의 두께입니다\r\n");
      out.write("					strokeColor : '#db4040',	// 선의 색깔입니다\r\n");
      out.write("					strokeOpacity : 1, 			// 선의 불투명도입니다. 0에서 1사이값이며 0에 가까울수록 투명합니다.\r\n");
      out.write("					strokeStyle : 'solid'		// 선의 스타일입니다.\r\n");
      out.write("				})\r\n");
      out.write("				drawLine_list.push(drawLine);\r\n");
      out.write("				distance = Math.round(lineLine.getLength());\r\n");
      out.write("				displayCircleDot(positions[i].latlng, distance);\r\n");
      out.write("			}\r\n");
      out.write("			function displayCircleDot(position, distance){\r\n");
      out.write("				if(distance>0){\r\n");
      out.write("					//클릭한 지점까지의 그려진 선의 총 거리를 표시할 커스텀 오버레이를 생성합니다\r\n");
      out.write("					var distanceOverlay = new kakao.maps.CustomOverlay({\r\n");
      out.write("						content : '<div class=\"dotOverlay\">거리<span class=\"number\">'\r\n");
      out.write("								+ distance + '</span>m</div>',\r\n");
      out.write("						position : position,\r\n");
      out.write("						yAnchor : 1,\r\n");
      out.write("						zIndex : 2,\r\n");
      out.write("					\r\n");
      out.write("					})	;\r\n");
      out.write("					\r\n");
      out.write("					distanceOverlay.setMap(map);\r\n");
      out.write("					distanceOverlay_list.push(distanceOverlay);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			var moveLatLon = new kakao.maps.LatLng(35.1599801229349, 126.85227886055003)\r\n");
      out.write("			map.setLevel(7);\r\n");
      out.write("			map.setCenter(moveLatLon);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		function drawLine_allClose(drawLine_list){\r\n");
      out.write("			for(let i =0; i<drawLine_list.length; i++){\r\n");
      out.write("				drawLine_list[i].setMap(null);\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		function distanceOverlay_allClose(distanceOverlay_list){\r\n");
      out.write("			for(let i =0; i<distanceOverlay_list.length; i++){\r\n");
      out.write("				distanceOverlay_list[i].setMap(null);\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"https://apis.openapi.sk.com/tmap/jsv2?version=1&appKey=l7xxefc4aaf819ab46d09bfedeef6adff714\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		 // 1. 지도 띄우기\r\n");
      out.write("		/*map1 = new Tmapv2.Map(\"tmap_map\", {\r\n");
      out.write("			center: new Tmapv2.LatLng(35.1599801229349, 126.85227886055003),\r\n");
      out.write("		});\r\n");
      out.write("		map1.setZoom(14);  */\r\n");
      out.write("	</script>\r\n");
      out.write("	<script>\r\n");
      out.write("		// 지도 경로미리보기 파트(티맵)\r\n");
      out.write("		var tmap_markers =[];\r\n");
      out.write("		var new_polyLine = [];\r\n");
      out.write("		var map1 = null;\r\n");
      out.write("		function tmap_route(){\r\n");
      out.write("			\r\n");
      out.write("			if(day==1){\r\n");
      out.write("				plan_list = plan_list1;\r\n");
      out.write("			}else if(day==2){\r\n");
      out.write("				plan_list = plan_list2;\r\n");
      out.write("			}else if(day==3){\r\n");
      out.write("				plan_list = plan_list3;\r\n");
      out.write("			}else if(day==4){\r\n");
      out.write("				plan_list = plan_list4;\r\n");
      out.write("			}else if(day==5){\r\n");
      out.write("				plan_list = plan_list5;\r\n");
      out.write("			}else if(day==6){\r\n");
      out.write("				plan_list = plan_list6;\r\n");
      out.write("			}\r\n");
      out.write("			console.log(\"plan_list\",plan_list)\r\n");
      out.write("			// 1. 지도 띄우기\r\n");
      out.write("			\r\n");
      out.write("			document.getElementById('kakao_map').style.display=\"none\";\r\n");
      out.write("				document.getElementById('tmap_map').style.display=\"block\";\r\n");
      out.write("			\r\n");
      out.write("			//map1 = null;\r\n");
      out.write("			if(map1==null){\r\n");
      out.write("			map1 = new Tmapv2.Map(\"tmap_map\", {\r\n");
      out.write("				center: new Tmapv2.LatLng(35.1599801229349, 126.85227886055003),\r\n");
      out.write("			});\r\n");
      out.write("			map1.setZoom(14);\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			var new_Click_polyLine = [];\r\n");
      out.write("			\r\n");
      out.write("			function drawData(data){\r\n");
      out.write("				// 지도위에 선은 다 지우기\r\n");
      out.write("				routeData = data;\r\n");
      out.write("				var resultStr = \"\";\r\n");
      out.write("				var distance = 0;\r\n");
      out.write("				var idx = 1;\r\n");
      out.write("				var newData = [];\r\n");
      out.write("				var equalData = [];\r\n");
      out.write("				var pointId1 = \"-1234567\";\r\n");
      out.write("				var ar_line = [];\r\n");
      out.write("				\r\n");
      out.write("				for (var i = 0; i < data.features.length; i++) {\r\n");
      out.write("					var feature = data.features[i];\r\n");
      out.write("					//배열에 경로 좌표 저잘\r\n");
      out.write("					if(feature.geometry.type == \"LineString\"){\r\n");
      out.write("						ar_line = [];\r\n");
      out.write("						for (var j = 0; j < feature.geometry.coordinates.length; j++) {\r\n");
      out.write("							var startPt = new Tmapv2.LatLng(feature.geometry.coordinates[j][1],feature.geometry.coordinates[j][0]);\r\n");
      out.write("							ar_line.push(startPt);\r\n");
      out.write("							pointArray.push(feature.geometry.coordinates[j]);\r\n");
      out.write("						}\r\n");
      out.write("						var polyline = new Tmapv2.Polyline({\r\n");
      out.write("					        path: ar_line,\r\n");
      out.write("					        strokeColor: \"#ff0000\", \r\n");
      out.write("					        strokeWeight: 6,\r\n");
      out.write("					        map: map1\r\n");
      out.write("					    });\r\n");
      out.write("						new_polyLine.push(polyline);\r\n");
      out.write("					}\r\n");
      out.write("					var pointId2 = feature.properties.viaPointId;\r\n");
      out.write("					if (pointId1 != pointId2) {\r\n");
      out.write("						equalData = [];\r\n");
      out.write("						equalData.push(feature);\r\n");
      out.write("						newData.push(equalData);\r\n");
      out.write("						pointId1 = pointId2;\r\n");
      out.write("					}\r\n");
      out.write("					else {\r\n");
      out.write("						equalData.push(feature);\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("				geoData = newData;\r\n");
      out.write("				var markerCnt = 1;\r\n");
      out.write("				for (var i = 0; i < newData.length; i++) {\r\n");
      out.write("					var mData = newData[i];\r\n");
      out.write("					var type = mData[0].geometry.type;\r\n");
      out.write("					var pointType = mData[0].properties.pointType;\r\n");
      out.write("					var pointTypeCheck = false; // 경유지 일때만 true\r\n");
      out.write("					if (mData[0].properties.pointType == \"S\") {\r\n");
      out.write("						var img = 'http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png';\r\n");
      out.write("						var lon = mData[0].geometry.coordinates[0];\r\n");
      out.write("						var lat = mData[0].geometry.coordinates[1];\r\n");
      out.write("					}\r\n");
      out.write("					else if (mData[0].properties.pointType == \"E\") {\r\n");
      out.write("						var img = 'http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png';\r\n");
      out.write("						var lon = mData[0].geometry.coordinates[0];\r\n");
      out.write("						var lat = mData[0].geometry.coordinates[1];\r\n");
      out.write("					}\r\n");
      out.write("					else {\r\n");
      out.write("						markerCnt=i;\r\n");
      out.write("						var lon = mData[0].geometry.coordinates[0];\r\n");
      out.write("						var lat = mData[0].geometry.coordinates[1];\r\n");
      out.write("					}	\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			// 2. 시작, 도착 심볼찍기\r\n");
      out.write("			\r\n");
      out.write("			var markerList = [];\r\n");
      out.write("			var pointArray = [];\r\n");
      out.write("			let plan_list_cnt = plan_list.length-1\r\n");
      out.write("			// 시작\r\n");
      out.write("			addMarker(\"llStart\",plan_list[0].map_longtitude, plan_list[0].map_latitude,1);\r\n");
      out.write("			// 도착 \r\n");
      out.write("			addMarker(\"llEnd\",plan_list[plan_list_cnt].map_longtitude, plan_list[plan_list_cnt].map_latitude,2);\r\n");
      out.write("			\r\n");
      out.write("			function addMarker(status, lon, lat, tag) {\r\n");
      out.write("				//출도착경유구분\r\n");
      out.write("				//이미지 파일 변경.\r\n");
      out.write("				var markerLayer;\r\n");
      out.write("				switch (status) {\r\n");
      out.write("					case \"llStart\":\r\n");
      out.write("						imgURL = 'http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png';\r\n");
      out.write("						break;\r\n");
      out.write("					case \"llPass\":\r\n");
      out.write("						imgURL = 'http://tmapapi.sktelecom.com/upload/tmap/marker/pin_b_m_p.png';\r\n");
      out.write("						break;\r\n");
      out.write("					case \"llEnd\":\r\n");
      out.write("						imgURL = 'http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png';\r\n");
      out.write("						break;\r\n");
      out.write("					default:\r\n");
      out.write("				};\r\n");
      out.write("				var marker = new Tmapv2.Marker({\r\n");
      out.write("					position: new Tmapv2.LatLng(lat,lon),\r\n");
      out.write("					icon: imgURL,\r\n");
      out.write("					map: map1\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				tmap_markers.push(marker);\r\n");
      out.write("				// 마커 드래그 설정\r\n");
      out.write("				marker.tag = tag;\r\n");
      out.write("				marker.addListener(\"dragend\", function (evt) {\r\n");
      out.write("				markerListenerEvent(evt);\r\n");
      out.write("			    });\r\n");
      out.write("			    marker.addListener(\"drag\", function (evt) {    	\r\n");
      out.write("			    	markerObject = markerList[tag];\r\n");
      out.write("			    });\r\n");
      out.write("			    markerList[tag] = marker;\r\n");
      out.write("				return marker;\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("			// 3. 경유지 심볼 찍기\r\n");
      out.write("			for(let i=1; i<plan_list.length-1; i++){\r\n");
      out.write("				addMarker(\"llPass\",plan_list[i].map_longtitude,plan_list[i].map_latitude,i+2);\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			// 4. 경로탐색 API 사용요청\r\n");
      out.write("			var startX = plan_list[0].map_longtitude;\r\n");
      out.write("			var startY = plan_list[0].map_latitude;\r\n");
      out.write("			var endX = plan_list[plan_list_cnt].map_longtitude;\r\n");
      out.write("			var endY = plan_list[plan_list_cnt].map_latitude;\r\n");
      out.write("			var passList = \"\";\r\n");
      out.write("			for(let i = 1; i<plan_list.length-1;i++){\r\n");
      out.write("				passList +=plan_list[i].map_longtitude+','+plan_list[i].map_latitude+'_';\r\n");
      out.write("			}\r\n");
      out.write("			var prtcl;\r\n");
      out.write("			var headers = {};\r\n");
      out.write("			headers[\"appKey\"]=\"l7xxefc4aaf819ab46d09bfedeef6adff714\";\r\n");
      out.write("			$.ajax({\r\n");
      out.write("					method:\"POST\", \r\n");
      out.write("					headers : headers, \r\n");
      out.write("					url:\"https://apis.openapi.sk.com/tmap/routes?version=1&format=json\",//\r\n");
      out.write("					//async:false,\r\n");
      out.write("					data:{ \r\n");
      out.write("						startX : startX,\r\n");
      out.write("						startY : startY,\r\n");
      out.write("						endX : endX,\r\n");
      out.write("						endY : endY,\r\n");
      out.write("						passList : passList,\r\n");
      out.write("						reqCoordType : \"WGS84GEO\",\r\n");
      out.write("						resCoordType : \"WGS84GEO\",\r\n");
      out.write("						angle : \"172\",\r\n");
      out.write("						searchOption : \"0\",\r\n");
      out.write("						trafficInfo : \"Y\"\r\n");
      out.write("					},\r\n");
      out.write("					success:function(response){\r\n");
      out.write("					prtcl = response;\r\n");
      out.write("					\r\n");
      out.write("					// 5. 경로탐색 결과 Line 그리기 \r\n");
      out.write("					var trafficColors = {\r\n");
      out.write("						extractStyles:true,\r\n");
      out.write("						/* 실제 교통정보가 표출되면 아래와 같은 Color로 Line이 생성됩니다. */\r\n");
      out.write("						trafficDefaultColor:\"#636f63\", //Default\r\n");
      out.write("						trafficType1Color:\"#19b95f\", //원할\r\n");
      out.write("						trafficType2Color:\"#f15426\", //지체\r\n");
      out.write("						trafficType3Color:\"#ff970e\"  //정체		\r\n");
      out.write("					};    			\r\n");
      out.write("					var style_red = {\r\n");
      out.write("						fillColor:\"#FF0000\",\r\n");
      out.write("						fillOpacity:0.2,\r\n");
      out.write("						strokeColor: \"#FF0000\",\r\n");
      out.write("						strokeWidth: 3,\r\n");
      out.write("						strokeDashstyle: \"solid\",\r\n");
      out.write("						pointRadius: 2,\r\n");
      out.write("						title: \"this is a red line\"\r\n");
      out.write("					};\r\n");
      out.write("					\r\n");
      out.write("					drawData(prtcl);\r\n");
      out.write("				\r\n");
      out.write("					\r\n");
      out.write("				\r\n");
      out.write("					// 6. 경로탐색 결과 반경만큼 지도 레벨 조정\r\n");
      out.write("					/* var newData = geoData[0];\r\n");
      out.write("					PTbounds = new Tmapv2.LatLngBounds();\r\n");
      out.write("							for (var i = 0; i < newData.length; i++) {\r\n");
      out.write("								var mData = newData[i];\r\n");
      out.write("								var type = mData.geometry.type;\r\n");
      out.write("								var pointType = mData.properties.pointType;\r\n");
      out.write("								if(type == \"Point\"){\r\n");
      out.write("									var linePt = new Tmapv2.LatLng(mData.geometry.coordinates[1],mData.geometry.coordinates[0]);\r\n");
      out.write("									console.log(linePt);\r\n");
      out.write("									PTbounds.extend(linePt);\r\n");
      out.write("								}\r\n");
      out.write("								else{\r\n");
      out.write("									var startPt,endPt;\r\n");
      out.write("									for (var j = 0; j < mData.geometry.coordinates.length; j++) {\r\n");
      out.write("										var linePt = new Tmapv2.LatLng(mData.geometry.coordinates[j][1],mData.geometry.coordinates[j][0]);\r\n");
      out.write("										PTbounds.extend(linePt);\r\n");
      out.write("									}\r\n");
      out.write("							}\r\n");
      out.write("						}\r\n");
      out.write("						map1.fitBounds(PTbounds); */\r\n");
      out.write("				\r\n");
      out.write("					},\r\n");
      out.write("					error:function(request,status,error){\r\n");
      out.write("					console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function tmap_allClose(){\r\n");
      out.write("			for(let i =0; i<tmap_markers.length; i++){\r\n");
      out.write("				tmap_markers[i].setMap(null);\r\n");
      out.write("			}\r\n");
      out.write("			tmap_markers=[];\r\n");
      out.write("		}\r\n");
      out.write("		function tmap_poly_allClose(){\r\n");
      out.write("			for(let i =0; i<new_polyLine.length; i++){\r\n");
      out.write("				new_polyLine[i].setMap(null);\r\n");
      out.write("			}\r\n");
      out.write("			new_polyLine=[];\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
