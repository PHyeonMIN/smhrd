/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2022-01-04 23:45:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.followDAO.tm_followDAO;
import com.followDTO.tm_followDTO;
import com.snsDTO.tm_snsDTO;
import java.util.ArrayList;
import com.snsDAO.tm_snsDAO;
import com.memberDAO.tm_memberDAO;
import com.memberDTO.tm_memberDTO;

public final class N4_005fmypage_005fsns_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.snsDAO.tm_snsDAO");
    _jspx_imports_classes.add("com.followDAO.tm_followDAO");
    _jspx_imports_classes.add("com.snsDTO.tm_snsDTO");
    _jspx_imports_classes.add("com.memberDAO.tm_memberDAO");
    _jspx_imports_classes.add("com.memberDTO.tm_memberDTO");
    _jspx_imports_classes.add("com.followDTO.tm_followDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./assets/css/N4_mypage_login_3myinfo2.css\" />\r\n");
      out.write("<title>N4_mypage_login_3myinfo2</title>\r\n");
      out.write("<style>\r\n");
      out.write(".followbox label {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	padding-left: 6px;\r\n");
      out.write("	padding-top: 4px;\r\n");
      out.write("	padding-right: 6px;\r\n");
      out.write("	padding-bottom: 4px;\r\n");
      out.write("	color: BLACK;\r\n");
      out.write("	font-size: inherit;\r\n");
      out.write("	font-family: 'NanumBarunGothic';\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	line-height: normal;\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("	background-color: #CDFBE4;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	border: 1px solid #fff;\r\n");
      out.write("	border-radius: .25em;\r\n");
      out.write("	-webkit-transition: background-color 0.2s;\r\n");
      out.write("	transition: background-color 0.2s;\r\n");
      out.write("	padding-top: 4px;\r\n");
      out.write("	padding-right: 6px;\r\n");
      out.write("	padding-bottom: 4px;\r\n");
      out.write("	padding-right: 6px;\r\n");
      out.write("	padding-bottom: 4px;\r\n");
      out.write("	padding-bottom: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".followbox label:hover {\r\n");
      out.write("	background-color: #6ed36e;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".followbox label:active {\r\n");
      out.write("	background-color: #367c36;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");

		tm_memberDTO opdto = (tm_memberDTO) session.getAttribute("opdto");		// 클릭한 사람의 데이터
		tm_memberDTO memberdto = (tm_memberDTO) session.getAttribute("dto"); 	// 로그인한 사람의 데이터
		tm_snsDAO snsdao = new tm_snsDAO();
		tm_memberDAO memberdao = new tm_memberDAO();
		ArrayList<tm_snsDTO> list = snsdao.searchMy(opdto.getMb_id());
		ArrayList<tm_snsDTO> followlist = snsdao.searchMy(opdto.getMb_id());
		int snsCount = snsdao.snsCount(memberdto.getMb_id());
		request.setAttribute("dto", memberdto);
		request.setAttribute("list", list);
	
		tm_followDTO follow_dto = new tm_followDTO(opdto.getMb_id(), memberdto.getMb_id());
		tm_followDAO follow_dao = new tm_followDAO();
	
		boolean check = follow_dao.checkFollow(follow_dto);
	
      out.write("\r\n");
      out.write("	<div class=\"header\">\r\n");
      out.write("		<b>My Real Travel in GwangJu </b>\r\n");
      out.write("		<button onClick=\"location.href='tm_LogoutCon'\">로그아웃</button>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"side_all\">\r\n");
      out.write("		<div class=\"side_one\">\r\n");
      out.write("			<nav>\r\n");
      out.write("				<ul class=\"side_menu\">\r\n");
      out.write("					<li><button class=\"side_button\"\r\n");
      out.write("							onClick=\"location.href='N1_main.jsp'\">검색</button></li>\r\n");
      out.write("					<li><button class=\"side_button\"\r\n");
      out.write("							onClick=\"location.href='N2_travelplan1.jsp'\">여행계획</button></li>\r\n");
      out.write("					<li><button class=\"side_button\"\r\n");
      out.write("							onClick=\"location.href='N3_mypage_login_1bookmark1.jsp'\">My</button></li>\r\n");
      out.write("					<li><button class=\"side_button\"\r\n");
      out.write("							onClick=\"location.href='N5_sns.jsp'\">SNS</button></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</nav>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"side_two\"></div>\r\n");
      out.write("		<div class=\"side_three\" style=\"height: 25%\">\r\n");
      out.write("			<div id=\"profile_img\">\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"tm_upload/");
      out.print(opdto.getMb_img());
      out.write("\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div style=\"align-self: center\">\r\n");
      out.write("				닉네임 :\r\n");
      out.write("				");
      out.print(opdto.getMb_nickname());
      out.write("\r\n");
      out.write("				<br> 게시물 :\r\n");
      out.write("				");
      out.print(snsCount);
      out.write("\r\n");
      out.write("				<div id=\"mb_follow\">\r\n");
      out.write("					팔로우 :\r\n");
      out.write("					");
      out.print(opdto.getMb_follow());
      out.write("</div>\r\n");
      out.write("				<div id=\"mb_follower\">\r\n");
      out.write("					팔로워 :\r\n");
      out.write("					");
      out.print(opdto.getMb_follower());
      out.write("</div>\r\n");
      out.write("					");

			if (check == true) {
			
      out.write("\r\n");
      out.write("			<div class=\"followbox\" style=\"align-self: center\">\r\n");
      out.write("				<label id=\"followlabel\" for=\"followButton\">FOLLOW</label>\r\n");
      out.write("				<button id=\"followButton\" onclick=\"follow('");
      out.print(opdto.getMb_id());
      out.write("')\"\r\n");
      out.write("					style=\"display: none\"></button>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

				}else{
			
      out.write("\r\n");
      out.write("			<!-- <button id=\"followButton\" onclick=\"follow('");
      out.print(opdto.getMb_id());
      out.write("')\"\r\n");
      out.write("				style=\"align-self: center; height: 26px; width: 100px;\">UNFOLLOW</button> -->\r\n");
      out.write("\r\n");
      out.write("			");

				//if (check == false) {
			
      out.write("\r\n");
      out.write("			 <div class=\"followbox\" style=\"align-self: center\">\r\n");
      out.write("				<label id=\"followlabel\" for=\"followButton\">UNFOLLOW</label>\r\n");
      out.write("				<button id=\"followButton\" onclick=\"follow('");
      out.print(opdto.getMb_id());
      out.write("')\"\r\n");
      out.write("					style=\"display: none\"></button>\r\n");
      out.write("			</div> \r\n");
      out.write("			");

				}
			
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div class=\"gallery\">\r\n");
      out.write("			");

				for (tm_snsDTO i : list) {
			
      out.write("\r\n");
      out.write("			<div>\r\n");
      out.write("				<a href=\"tm_SelectOne?tb_seq=");
      out.print(i.getTb_seq());
      out.write("\"> <img\r\n");
      out.write("					class=\"item\" src=\"tm_upload/");
      out.print(i.getTb_file());
      out.write("\">\r\n");
      out.write("				</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

				}
			
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"map\" style=\"width: 73.3%; height: 100vh; float: right;\"></div>\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\" src=\"assets/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		var cnt =\r\n");
      out.write("	");
      out.print(opdto.getMb_follower());
      out.write("\r\n");
      out.write("		;\r\n");
      out.write("		function follow(mb_id) {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("\r\n");
      out.write("				url : \"tm_followCon\",\r\n");
      out.write("				type : \"post\",\r\n");
      out.write("				data : {\r\n");
      out.write("					\"f_id\" : mb_id\r\n");
      out.write("				},\r\n");
      out.write("				dataType : 'json',\r\n");
      out.write("				success : function(res) {\r\n");
      out.write("					console.log(res);\r\n");
      out.write("					// true로 넘어오면 팔로우 된 상태\r\n");
      out.write("					if (res.check == true) {\r\n");
      out.write("						$('#followlabel').html(\"UNFOLLOW\");\r\n");
      out.write("						$('#mb_follower').html('팔로워 : ' + res.follow);\r\n");
      out.write("					} else {\r\n");
      out.write("						$('#followlabel').html(\"FOLLOW\");\r\n");
      out.write("						$('#mb_follower').html('팔로워 : ' + res.follow);\r\n");
      out.write("					}\r\n");
      out.write("\r\n");
      out.write("				},\r\n");
      out.write("				error : function() {\r\n");
      out.write("					alert(\"요청 실패 팔로우 \");\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("			})\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("	<script src=\"js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\"\r\n");
      out.write("		src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=31e189d0d305a85663770a625b11688d&libraries=services\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		// 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다\r\n");
      out.write("		var infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("			zIndex : 1\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("		mapOption = {\r\n");
      out.write("			center : new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n");
      out.write("			level : 3\r\n");
      out.write("		// 지도의 확대 레벨\r\n");
      out.write("		};\r\n");
      out.write("\r\n");
      out.write("		// 지도를 생성합니다    \r\n");
      out.write("		var map = new kakao.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\r\n");
      out.write("		// 장소 검색 객체를 생성합니다\r\n");
      out.write("		var ps = new kakao.maps.services.Places();\r\n");
      out.write("\r\n");
      out.write("		var txt;\r\n");
      out.write("		function search() {\r\n");
      out.write("			txt = $('input[type=text]').val()\r\n");
      out.write("			// 키워드로 장소를 검색합니다\r\n");
      out.write("			ps.keywordSearch(txt, placesSearchCB);\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 키워드 검색 완료 시 호출되는 콜백함수 입니다\r\n");
      out.write("		function placesSearchCB(data, status, pagination) {\r\n");
      out.write("			if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("\r\n");
      out.write("				// 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n");
      out.write("				// LatLngBounds 객체에 좌표를 추가합니다\r\n");
      out.write("				var bounds = new kakao.maps.LatLngBounds();\r\n");
      out.write("\r\n");
      out.write("				for (var i = 0; i < data.length; i++) {\r\n");
      out.write("					displayMarker(data[i]); //마커 찍어주는 부분\r\n");
      out.write("					bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x)); //범위설정\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				// 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n");
      out.write("				map.setBounds(bounds);\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 지도에 마커를 표시하는 함수입니다\r\n");
      out.write("		function displayMarker(place) {\r\n");
      out.write("\r\n");
      out.write("			// 마커를 생성하고 지도에 표시합니다\r\n");
      out.write("			var marker = new kakao.maps.Marker({\r\n");
      out.write("				map : map,\r\n");
      out.write("				position : new kakao.maps.LatLng(place.y, place.x)\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("			// 마커에 클릭이벤트를 등록합니다\r\n");
      out.write("			kakao.maps.event.addListener(marker, 'mouseover', function() {\r\n");
      out.write("				// 마커위에 커서 올렸을 때  장소명이 인포윈도우에 표출됩니다\r\n");
      out.write("				infowindow\r\n");
      out.write("						.setContent('<div style=\"padding:5px;font-size:12px;\">'\r\n");
      out.write("								+ place.place_name + '</div>');\r\n");
      out.write("				infowindow.open(map, marker);\r\n");
      out.write("			});\r\n");
      out.write("			kakao.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("				// 마커 위에서 커서를 내렸을때 인포윈도우 삭제(안보이게)\r\n");
      out.write("				infowindow.close();\r\n");
      out.write("\r\n");
      out.write("			});\r\n");
      out.write("			kakao.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("				// 마커클릭했을 때 해당 장소 정보 보여주는 페이지로 이동\r\n");
      out.write("				location.href = \"info.jsp?place=\" + txt\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
